import React, { useContext } from "react";
import "./styles.css";
import BottomNavigation from "@mui/material/BottomNavigation";
import BottomNavigationAction from "@mui/material/BottomNavigationAction";
import Paper from "@mui/material/Paper";
import Icon from "../../assets/icons";
import ThemeContext from "../../context/ThemeContext";
import { useNavigate } from "react-router-dom";
const { PeopleWhite, HomeWhite, FileWhite, ActiveHome, ActiveJob, ActiveNetwork } = Icon;

const Index = () => {
 let path = window.location.pathname;
 const navigate = useNavigate();
 const { dark } = useContext(ThemeContext);
 const links = [
  { label: "Home", icon: HomeButtonIcon(dark, path), href: "/" },
  { label: "My Network", icon: networkButton(dark, path), href: "/network" },
  { label: "Jobs", icon: JobsIcon(dark, path), href: "/jobs" },
 ];

 const color = (href) => (!dark ? `${path === href ? "#8077F6" : "#090b0c"}` : `${path === href ? "#8077F6" : "#fff"}`);
 return (
  <Paper
   sx={{
    zIndex: 99999,
    height: "87px",
    width: "100%",
    position: "fixed",
    bottom: 0,
    left: 0,
    right: 0,
    border: "none",
    borderTop: `0.5px solid ${dark ? "#5d6974" : "rgba(60, 60, 67, 0.36)"}`,
    background: dark ? "#090b0c" : "#fff",
   }}
   elevation={3}
  >
   <BottomNavigation showLabels sx={{ paddingTop: "10px", background: dark ? "#090b0c" : "#fff" }}>
    {links.map((link) => (
     <BottomNavigationAction onClick={() => navigate(link.href)} sx={{ gap: "14px" }} label={<label style={{ color: color(link.href) }}>{link.label}</label>} icon={link.icon} />
    ))}
   </BottomNavigation>
  </Paper>
 );
};

export default Index;

const HomeButtonIcon = (dark, path) => {
 if (path === "/") return <img src={ActiveHome} />;
 if (dark) return <img src={HomeWhite} />;
 return (
  <svg width="19" height="20" viewBox="0 0 19 20" fill="none" xmlns="http://www.w3.org/2000/svg">
   <path
    fill-rule="evenodd"
    clip-rule="evenodd"
    d="M13.5 10.8333C13.5 13.1345 11.6345 15 9.33331 15C7.03212 15 5.16665 13.1345 5.16665 10.8333C5.16665 8.53213 7.03212 6.66665 9.33331 6.66665C11.6345 6.66665 13.5 8.53213 13.5 10.8333ZM11.8333 10.8333C11.8333 12.214 10.714 13.3333 9.33331 13.3333C7.9526 13.3333 6.83331 12.214 6.83331 10.8333C6.83331 9.4526 7.9526 8.33331 9.33331 8.33331C10.714 8.33331 11.8333 9.4526 11.8333 10.8333Z"
    fill="#090B0C"
   />
   <path
    fill-rule="evenodd"
    clip-rule="evenodd"
    d="M10.6958 1.14168C9.86729 0.603162 8.79934 0.603163 7.97084 1.14168L1.43789 5.3881C0.621873 5.91851 0.18785 6.87429 0.325489 7.83776L1.63727 17.0202C1.81321 18.2518 2.86801 19.1666 4.11214 19.1666H14.5545C15.7986 19.1666 16.8534 18.2518 17.0294 17.0202L18.3411 7.83776C18.4788 6.87429 18.0448 5.91851 17.2287 5.3881L10.6958 1.14168ZM8.87916 2.53909C9.15532 2.35958 9.51131 2.35958 9.78747 2.53909L16.3204 6.78551C16.5924 6.96231 16.7371 7.28091 16.6912 7.60206L15.3794 16.7845C15.3208 17.195 14.9692 17.5 14.5545 17.5H4.11214C3.69743 17.5 3.34583 17.195 3.28718 16.7845L1.9754 7.60206C1.92952 7.2809 2.0742 6.96231 2.34621 6.78551L8.87916 2.53909Z"
    fill="#090B0C"
   />
  </svg>
 );
};
const networkButton = (dark, path) => {
 if (path === "/network") return <img src={ActiveNetwork} />;

 if (dark) return <img src={PeopleWhite} />;
 return (
  <svg width="19" height="17" viewBox="0 0 19 17" fill="none" xmlns="http://www.w3.org/2000/svg">
   <path
    fill-rule="evenodd"
    clip-rule="evenodd"
    d="M7.24987 2.33341C5.63904 2.33341 4.33321 3.63925 4.33321 5.25008C4.33321 6.86091 5.63904 8.16675 7.24987 8.16675C8.8607 8.16675 10.1665 6.86091 10.1665 5.25008C10.1665 3.63925 8.8607 2.33341 7.24987 2.33341ZM2.66654 5.25008C2.66654 2.71878 4.71857 0.666748 7.24987 0.666748C9.78118 0.666748 11.8332 2.71878 11.8332 5.25008C11.8332 7.78139 9.78118 9.83341 7.24987 9.83341C4.71857 9.83341 2.66654 7.78139 2.66654 5.25008ZM11.9203 1.51902C12.1251 1.10687 12.6253 0.938799 13.0374 1.14362C14.5445 1.8926 15.5832 3.44928 15.5832 5.25008C15.5832 7.05088 14.5445 8.60756 13.0374 9.35654C12.6253 9.56136 12.1251 9.39329 11.9203 8.98114C11.7155 8.56899 11.8835 8.06884 12.2957 7.86402C13.2581 7.38575 13.9165 6.39405 13.9165 5.25008C13.9165 4.10611 13.2581 3.11441 12.2957 2.63614C11.8835 2.43132 11.7155 1.93117 11.9203 1.51902ZM7.24987 13.1667C5.13423 13.1667 3.15614 14.2712 1.65514 16.1816C1.37081 16.5435 0.846927 16.6064 0.48503 16.322C0.123133 16.0377 0.0602609 15.5138 0.3446 15.1519C2.08775 12.9333 4.51414 11.5001 7.24987 11.5001C9.9856 11.5001 12.412 12.9333 14.1551 15.1519C14.4395 15.5138 14.3766 16.0377 14.0147 16.322C13.6528 16.6064 13.1289 16.5435 12.8446 16.1816C11.3436 14.2712 9.36551 13.1667 7.24987 13.1667ZM13.574 12.6285C13.7637 12.2092 14.2575 12.0231 14.6768 12.2129C16.075 12.8456 17.3116 13.8661 18.3218 15.1519C18.6062 15.5138 18.5433 16.0377 18.1814 16.322C17.8195 16.6064 17.2956 16.5435 17.0113 16.1816C16.1423 15.0757 15.1105 14.2385 13.9897 13.7313C13.5703 13.5416 13.3842 13.0478 13.574 12.6285Z"
    fill="#768193"
   />
  </svg>
 );
};
const JobsIcon = (dark, path) => {
 if (path === "/jobs") return <img src={ActiveJob} />;
 if (dark) return <img src={FileWhite} />;
 return (
  <svg width="19" height="18" viewBox="0 0 19 18" fill="none" xmlns="http://www.w3.org/2000/svg">
   <path
    fill-rule="evenodd"
    clip-rule="evenodd"
    d="M9.21864 0.666543C9.2563 0.666564 9.29451 0.666584 9.33329 0.666584C9.37207 0.666584 9.41028 0.666564 9.44794 0.666543C10.1108 0.666184 10.603 0.665918 11.0294 0.780165C12.1797 1.08839 13.0782 1.98688 13.3864 3.13719C13.455 3.39341 13.4823 3.67341 13.4931 3.99992L15.0321 3.99992C15.4714 3.9999 15.8503 3.99989 16.1625 4.02539C16.4919 4.05231 16.8196 4.11174 17.1349 4.2724C17.6053 4.51209 17.9878 4.89454 18.2275 5.36494C18.3881 5.68026 18.4476 6.00794 18.4745 6.33739C18.5 6.64953 18.5 7.0285 18.5 7.46778V13.8654C18.5 14.3047 18.5 14.6836 18.4745 14.9958C18.4476 15.3252 18.3881 15.6529 18.2275 15.9682C17.9878 16.4386 17.6053 16.8211 17.1349 17.0608C16.8196 17.2214 16.4919 17.2809 16.1625 17.3078C15.8503 17.3333 15.4714 17.3333 15.0321 17.3333H3.63449C3.19521 17.3333 2.81624 17.3333 2.5041 17.3078C2.17465 17.2809 1.84697 17.2214 1.53165 17.0608C1.06125 16.8211 0.678795 16.4386 0.439111 15.9682C0.278449 15.6529 0.21902 15.3252 0.192102 14.9958C0.166599 14.6836 0.166612 14.3047 0.166627 13.8654V7.4678C0.166612 7.02851 0.166599 6.64954 0.192102 6.33739C0.21902 6.00794 0.278449 5.68026 0.439111 5.36494C0.678795 4.89454 1.06125 4.51208 1.53165 4.2724C1.84697 4.11174 2.17465 4.05231 2.5041 4.02539C2.81625 3.99989 3.19522 3.9999 3.63451 3.99992L5.17347 3.99992C5.18425 3.67341 5.21155 3.39341 5.28021 3.13719C5.58843 1.98688 6.48692 1.08839 7.63723 0.780165C8.06361 0.665918 8.55582 0.666184 9.21864 0.666543ZM3.66663 5.66658C3.18617 5.66658 2.87594 5.66723 2.63982 5.68652C2.41344 5.70502 2.32951 5.73642 2.2883 5.75741C2.1315 5.83731 2.00402 5.96479 1.92412 6.12159C1.90313 6.1628 1.87173 6.24673 1.85323 6.47311C1.83394 6.70923 1.83329 7.01946 1.83329 7.49992V13.8333C1.83329 14.3137 1.83394 14.6239 1.85323 14.8601C1.87173 15.0864 1.90313 15.1704 1.92412 15.2116C2.00402 15.3684 2.1315 15.4959 2.2883 15.5758C2.32951 15.5968 2.41344 15.6281 2.63982 15.6466C2.87594 15.6659 3.18617 15.6666 3.66663 15.6666H15C15.4804 15.6666 15.7906 15.6659 16.0268 15.6466C16.2531 15.6281 16.3371 15.5968 16.3783 15.5758C16.5351 15.4959 16.6626 15.3684 16.7425 15.2116C16.7635 15.1704 16.7949 15.0864 16.8134 14.8601C16.8326 14.6239 16.8333 14.3137 16.8333 13.8333V7.49992C16.8333 7.01946 16.8326 6.70923 16.8134 6.47311C16.7949 6.24673 16.7635 6.1628 16.7425 6.12159C16.6626 5.96479 16.5351 5.83731 16.3783 5.75741C16.3371 5.73642 16.2531 5.70502 16.0268 5.68652C15.7906 5.66723 15.4804 5.66658 15 5.66658H3.66663ZM11.8251 3.99992H6.84151C6.84917 3.78527 6.86356 3.66754 6.89008 3.56855C7.0442 2.9934 7.49344 2.54415 8.0686 2.39004C8.25383 2.34041 8.50467 2.33325 9.33329 2.33325C10.1619 2.33325 10.4128 2.34041 10.598 2.39004C11.1731 2.54415 11.6224 2.9934 11.7765 3.56855C11.803 3.66754 11.8174 3.78527 11.8251 3.99992Z"
    fill="#768193"
   />
  </svg>
 );
};
